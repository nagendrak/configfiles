" Install OmniCppComplete like described on http://vim.wikia.com/wiki/C++_code_completion
" This offers intelligent C++ completion when typing ‘.’ ‘->’ or <C-o>
" Load standard tag files
"
let s:extfname = expand("%:e")

if s:extfname ==? "cpp"

    set tags+=~/.vim/tags/cpp
    set tags+=~/.vim/tags/gl
    set tags+=~/.vim/tags/sdl
    set tags+=~/.vim/tags/qt4
    
    " Enhanced keyboard mappings
    "
    "" in normal mode F2 will save the file
    nmap <F2> :w<CR>
    " in insert mode F2 will exit insert, save, enters insert again
    imap <F2> <ESC>:w<CR>i
    " switch between header/source with F4
    map <F4> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR>
    " recreate tags file with F5
    map <F5> :!ctags -R –c++-kinds=+p –fields=+iaS –extra=+q .<CR>
    " create doxygen comment
    map <F6> :Dox<CR>
    " build using makeprg with <F7>
    map <F7> :make<CR>
    " build using makeprg with <S-F7>
    map <S-F7> :make clean all<CR>
    " goto definition with F12
    map <F12> <C-]>
    
    " intelligent comments
    set comments=sl:/*,mb:\ *,elx:\ */
    
    " OmniCppComplete
    let OmniCpp_NamespaceSearch = 1
    let OmniCpp_GlobalScopeSearch = 1
    let OmniCpp_ShowAccess = 1
    let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
    let OmniCpp_MayCompleteDot = 1 " autocomplete after .
    let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
    let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
    let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
    " automatically open and close the popup menu / preview window
    au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
    set completeopt=menuone,menu,longest,preview
    
    colorscheme fnaqevan
    " colorscheme gardener

endif
