# Get the new R from current shell
set-option -g update-environment " R"

# Changing the default prefix to "screen"-like
set -g prefix C-a
unbind C-b

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g mouse-utf8 on; set-window-option -g utf8 on"

set -sg escape-time 1
setw -g automatic-rename off
set -g default-terminal "xterm"

bind r source-file ~/.tmux.conf \; display "configuration reloaded!"

# Ensure C-a still works - only will have to press twice!
bind C-a send-prefix

# Use o for toggling between windows (default is l which is used below for pane movement)
bind o last-window

# Automatically prompt for window name for new windows
# Following is for tmux version >= 1.9
# bind-key c command-prompt -p "window name:" "new-window -c '#{pane_current_path}' \; rename-window '%%'"

#####----- Pane stuff -----#####
# Easy mapping for creating panes
# unbind %
# bind | split-window -h -c '#{pane_current_path}'
# bind - split-window -v -c '#{pane_current_path}'

# Following is for tmux version < 1.8
# bind-key c new-window -c '' \; command-prompt -p name: 'rename-window %1'
bind-key c command-prompt -p "window name:" "new-window -c '' \; rename-window '%%'"
unbind %
bind | split-window -h -c ''
bind - split-window -v -c ''

# Mappings for moving around different panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resizing panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Colourizing panes
set -g pane-border-style fg=colour235
set -g pane-border-style bg=black
set -g pane-active-border-style fg=colour240
set -g pane-active-border-style bg=yellow

# Maximizing current pane
unbind z
bind z run ". ~/.tmux/zoom"

#####----- Status bar stuff -----#####
# The status bar itself
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g status-utf8 on"
set -g status-fg white
set -g status-bg black

# Window list
set -g status-justify centre

setw -g window-status-format "#[fg=normal]#I$ #W"
setw -g window-status-style fg=colour241
setw -g window-status-style bg=default
setw -g window-status-style dim

setw -g window-status-current-style fg=red
setw -g window-status-current-style bg=default
#setw -g window-status-current-style default
setw -g window-status-current-format "#[fg=red]{ #[fg=colour231]#I$ #W#[fg=red] }"

setw -g monitor-activity on
set -g visual-activity on

# Session-name
set -g status-left-length 40
set -g status-left "#[fg=colour82][ #[fg=brightgreen]#(echo $HOSTNAME) #[fg=colour202]#S #[fg=colour82]]"

#set -g status-right-length 60
set -g status-right "#[fg=colour82][#[fg=brightblue] %d %b %Y #[fg=colour231]%H:%M #[fg=colour82]]"

#####----- Command-line stuff -----#####
set -g message-style fg=white
set -g message-style bg=black
set -g message-style bright

# tmux buffer to work with vi-like keys
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection;
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle;
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
